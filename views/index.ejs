<!-- views/pages/index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <% include partials/head %>
</head>
<body class="container">

<div class="zta_test">
    <div class="zta_boxes">
        <textarea id="zta1" placeholder="Url"></textarea>
        <textarea id="zta2" class="json" placeholder="Params (json)"></textarea>
    </div>
    <br>

    <div class="zta_boxes">
        <textarea id="zta1" placeholder="Number of requests in 1 second"></textarea>
        <textarea id="zta2" placeholder="Time (seconds)"></textarea>
    </div>

    <select id="preExec" name="method" placeholder="Method">
        <option value="">Method</option>
        <option value="get">Get</option>
        <option value="post">Post</option>
    </select>

    <button onclick="zta_jsCompare()">Run</button>
    <div id="zta_output"></div>
</div>

<footer>
    <% include partials/footer %>
</footer>

</body>

<script>
    "use strict";

    /**
     * Call
     */
    $(document).ready(function () {
        PerformanceTesting.Constructor.SetJsonExample();
    });

    /**
     * Property default
     */
    let PerformanceTesting;
    (function (PerformanceTesting) {
        PerformanceTesting.Constructor = {
            SetJsonExample: function () {
                // arbitrary js object:
                const myJsObj = {
                    data: {
                        id: '123',
                        username: 'test',
                        email: 'test@gmail.com',
                        password: '123456'
                    }
                };

                // using JSON.stringify pretty print capability:
                const str = JSON.stringify(myJsObj, undefined, 4);
                // display pretty printed object in text area:
                $('.json').html(str);
            }
        };

        // Ajax of MANAGER pages will place here.
        PerformanceTesting.Common = {
            Promise: function ($data, urlTo, $method) {
                return Promise.resolve(
                    $.ajax({
                        url: urlTo,
                        type: $method,
                        dataType: 'json',
                        data: $data
                    })
                );
            }
        };
    })((PerformanceTesting = {}) || PerformanceTesting);

    // To avoid confict with other Ajax global variable, We will appending properties instead of override it.
    // Some js minify tool will assign Ajax variable to file_name_liked namespace as like bellow.
    // Ajax_facade.Ajax = Ajax;
    // To be safe, We will assign Ajax to window variable.

    window.PerformanceTesting = window.PerformanceTesting ? window.PerformanceTesting : PerformanceTesting;
</script>
</html>
